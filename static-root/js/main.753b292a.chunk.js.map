{"version":3,"sources":["components/Posts/Posts.module.css","logo.svg","components/Header/Header.module.css","components/Header/Header.js","api/posts_api.js","components/Posts/posts_api_methods.js","components/Posts/Post/Buttons/ActionBtn.js","components/Posts/Post/ParentPost.js","components/Profiles/UserActions.js","components/Posts/Post/Post.js","components/Posts/PostsList.js","components/Posts/Post/PostCreate.js","components/Posts/PostsComponent.js","App.js","serviceWorker.js","components/Posts/FeedList.js","components/Posts/FeedComponent.js","utils.js","components/Profiles/ProfileBadge.js","components/Profiles/profile_api_methods.js","index.js"],"names":["module","exports","Header","props","className","styles","logo","src","alt","backendLoockup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiPostList","username","nextUrl","replace","apiPostFeed","undefined","ActionBtn","post","action","didPerformAction","likes","actionDisplay","display","handlerActionBackendEvent","console","log","type","onClick","event","preventDefault","post_id","apiPostAction","id","ParentPost","hideActions","UserPicture","user","hideLink","userIdSpan","UserLink","children","UserDisplay","nameDisplay","includeFullName","first_name","last_name","Fragment","PostDetailComponent","postId","useState","didLookup","setDidLookup","setPost","handleBackendLookup","alert","useEffect","Post","didRepost","actionPost","setActionPost","match","pathname","urlPostId","groups","isDetail","handlePerformAction","newPostAction","content","parent","PostsList","postsInit","setPostsInit","posts","setPosts","setNestUrl","postsDidSet","setPostsDidSet","final","newPosts","concat","next","results","handleDidRepost","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index","key","PostCreate","textAreaRef","React","createRef","didPost","handleBackendUpdate","postCreate","onSubmit","newVal","current","value","ref","required","rows","PostsComponent","setNewPosts","canPost","tempNewPosts","App","Boolean","hostname","FeedComponent","FeedList","DisplayCount","numeral","format","ProfileBagde","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBagdeComponent","profile","setProfile","setProfileLoading","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","createElement","appEl","getElementById","DatasetComponent","dataset","ReactDOM","render","postsEl","querySelectorAll","forEach","container","feedEl","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.753b292a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCreate\":\"Posts_postCreate__2Kx9I\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3fMln\"};","import React from 'react';\r\nimport logo from \"../../logo.svg\";\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light pb-0\">\r\n                <div className={styles.logo}>\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p className=\"navbar-brand\" >header</p>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLoockup(method, endpoint, callback, data) {\r\n    let jsonData\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    const csrftoken = getCookie('csrftoken')\r\n    xhr.responseType = 'json'\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n\r\n    if (csrftoken) {\r\n        //xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\r\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n            if (detail === 'Authentication credentials were not provided.') {\r\n                if (window.location.href.indexOf('login') === -1) {\r\n                    window.location.href = '/login?showLoginRequired=true'\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({'message': 'request was an error'}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}\r\n","import {backendLoockup} from '../../api/posts_api'\r\n\r\nexport function apiPostList(username, callback, nextUrl) {\r\n    let endpoint = '/posts'\r\n    if (username) {\r\n        endpoint = `/posts/?username=${username}`\r\n    }\r\n    if (nextUrl) {\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLoockup('GET', endpoint, callback)\r\n}\r\n\r\nexport function apiPostFeed(callback, nextUrl) {\r\n    let endpoint = '/posts/feed'\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLoockup('GET', endpoint, callback)\r\n}\r\n\r\nexport function apiPostCreate(content, callback) {\r\n    const data = {content}\r\n    backendLoockup('POST', '/posts/create', callback, data)\r\n}\r\n\r\nexport function apiPostAction(post_id, action, callback) {\r\n    const data = {post_id, action}\r\n    backendLoockup('POST', '/posts/action', callback, data)\r\n}\r\n\r\nexport function apiPostDetail(post_id, callback) {\r\n    backendLoockup('GET', `/posts/${post_id}`, callback)\r\n}","import {apiPostAction} from \"../../posts_api_methods\";\r\nimport React from \"react\";\r\n\r\nconst ActionBtn = (props) => {\r\n    const {post, action, didPerformAction} = props\r\n    const likes = post.likes ? post.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handlerActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiPostAction(post.id, action.type, handlerActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay\r\n    return <button onClick={handleClick} className={className}>{display}</button>\r\n}\r\n\r\nexport default ActionBtn","import React from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nfunction ParentPost(props) {\r\n    const {post} = props\r\n\r\n    return (\r\n            <Post post={post} hideActions className={' '} />\r\n    )\r\n}\r\n\r\nexport default ParentPost","import React from \"react\";\r\n\r\n\r\nexport const UserPicture = (props) => {\r\n    const {user, className, hideLink} = props\r\n\r\n    const userIdSpan = <div className={className}>\r\n        <span className=\"px-3 py-2 rounded-circle bg-dark text-white\">\r\n            { user.username[0] }\r\n        </span>\r\n        <p className='mt-2 text-muted small'>@{ user.username }</p>\r\n    </div>\r\n\r\n    return hideLink === true ? userIdSpan : <UserLink username={user.username}>\r\n        {userIdSpan}\r\n    </UserLink>\r\n}\r\n\r\nexport const UserLink = (props) => {\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        { props.children }\r\n    </span>\r\n}\r\n\r\nexport const UserDisplay = (props) => {\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\r\n\r\n    return <React.Fragment>\r\n        { nameDisplay }\r\n    </React.Fragment>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport ActionBtn from \"./Buttons/ActionBtn\";\r\nimport ParentPost from \"./ParentPost\";\r\nimport {apiPostDetail} from \"../posts_api_methods\";\r\nimport {UserDisplay, UserPicture} from \"../../Profiles/UserActions\";\r\n\r\n\r\nexport const PostDetailComponent = (props) => {\r\n    const {postId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [post, setPost] = useState(null)\r\n    let className = props.className ? props.className : 'col-12 mt-5'\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setPost(response)\r\n        } else {\r\n            alert('there was an error finding your post')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiPostDetail(postId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n\r\n    }, [postId, didLookup, setDidLookup])\r\n\r\n    return post === null ? null : <Post post={post} className={className} />\r\n}\r\n\r\n\r\nconst Post = (props) => {\r\n    const {post, didRepost} = props\r\n    const [actionPost, setActionPost] = useState(props.post ? props.post : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto mt-5'\r\n\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<id>\\d+)/)\r\n    const urlPostId = match ? match.groups.id : -1\r\n\r\n    const isDetail = `${post.id}` === `${urlPostId}`\r\n    const handlePerformAction = (newPostAction, status) => {\r\n        if (status === 200) {\r\n            setActionPost(newPostAction)\r\n        } else if (status === 201) {\r\n            if (didRepost) {\r\n                didRepost(newPostAction)\r\n            }\r\n        }\r\n    }\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${post.id}`\r\n\r\n    }\r\n    return (\r\n        <div className= {className + ' mt-5'} id={post.id}>\r\n            <div className='d-flex'>\r\n                <UserPicture user={post.user} className={'col-2 text-center'} />\r\n                <div className=\"col-10 px-5\">\r\n                    <div className='content'>\r\n                        <UserDisplay user={post.user} includeFullName={true} />\r\n                        <p>{post.content}</p>\r\n                        {post.parent && <div className='border rounded'>\r\n                            <p className='m-1 text-muted small'>Repost</p>\r\n                            <ParentPost post={post.parent} />\r\n                        </div>}\r\n                    </div>\r\n                    <div className={'btn btn-group px-0'}>\r\n                        {(actionPost && props.hideActions !== true) && <React.Fragment>\r\n                            <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{type:'like', display: 'Like'}}/>\r\n                            <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{type:'unlike', display: 'Unlike'}}/>\r\n                            <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{type:'repost', display: 'Share'}}/>\r\n                        </React.Fragment>\r\n                        }\r\n                        {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm float-none' onClick={handleLink}>View</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {useEffect, useState} from \"react\";\r\nimport {apiPostList} from \"./posts_api_methods\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst PostsList = (props) => {\r\n    const [postsInit, setPostsInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [nextUrl, setNestUrl] = useState(null)\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newPosts].concat(postsInit)\r\n        if (final.length !== posts.length) {\r\n            setPosts(final)\r\n        }\r\n    }, [props.newPosts, posts, postsInit])\r\n\r\n    useEffect(() => {\r\n        if (postsDidSet === false) {\r\n            const handlePostListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNestUrl(response.next)\r\n                    setPostsInit(response.results)\r\n                    setPostsDidSet(true)\r\n                } else {\r\n                    alert('alert')\r\n                }\r\n            }\r\n            apiPostList(props.username, handlePostListLookup)\r\n        }\r\n    }, [postsInit, postsDidSet, setPostsDidSet, props.username])\r\n\r\n    const handleDidRepost = (newPost) => {\r\n        const updatePostsInit = [...postsInit]\r\n        updatePostsInit.unshift(newPost)\r\n        setPostsInit(updatePostsInit)\r\n        const updateFinalPosts = [...posts]\r\n        updateFinalPosts.unshift(posts)\r\n        setPosts(updateFinalPosts)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNestUrl(response.next)\r\n                    const newPosts = [...posts].concat(response.results)\r\n                    setPostsInit(newPosts)\r\n                    setPosts(newPosts)\r\n                } else {\r\n                    alert('alert')\r\n                }\r\n            }\r\n            apiPostList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {posts.map((item, index)=>{\r\n                return <Post\r\n                    post={item}\r\n                    didRepost={handleDidRepost}\r\n                    className='my-5 py-5 border bg-white text-dark'\r\n                    key={`${index}-{item.id}`}\r\n                />\r\n            })}\r\n            {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>next</button>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PostsList","import React from \"react\";\r\nimport {apiPostCreate} from \"../posts_api_methods\";\r\nimport styles from \"../Posts.module.css\";\r\n\r\nconst PostCreate = (props) => {\r\n    const textAreaRef = React.createRef()\r\n    const {didPost} = props\r\n\r\n    const handleBackendUpdate = (response, status) => {\r\n        if (status === 201) {\r\n            didPost(response)\r\n        } else {\r\n            console.log(response)\r\n            alert('An error occured. Please try again')\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        apiPostCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n\r\n    return <div className={\"col-12 my-5 \" + styles.postCreate}>\r\n        <form onSubmit={handleSubmit} action=\"\">\r\n            <textarea ref={textAreaRef} required={true} className='form-control mb-3' name=\"post\" id=\"\" rows='5'/>\r\n            <button type='submit' className='btn btn-primary'>Post</button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default PostCreate","import React, {useState} from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport PostsList from \"./PostsList\";\r\nimport PostCreate from \"./Post/PostCreate\";\r\n\r\n\r\nconst PostsComponent = (props) => {\r\n    const [newPosts, setNewPosts] = useState([])\r\n    const canPost = props.canPost === 'false' ? false : true\r\n\r\n    const handleNewPost = (newPost) => {\r\n        let tempNewPosts = [...newPosts]\r\n        tempNewPosts.unshift(newPost)\r\n        setNewPosts(tempNewPosts)\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        {canPost === true && <PostCreate didPost={handleNewPost} className={\"col-12 my-5 \" + styles.postCreate} />}\r\n        <PostsList newPosts={newPosts} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default PostsComponent;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport PostsComponent from \"./components/Posts/PostsComponent\";\r\n\r\n\r\n\r\nconst App = (props) => {\r\n    return (\r\n        <div className='App'>\r\n            <header id=\"pageHeader\">\r\n                <Header />\r\n            </header>\r\n            <div id=\"mainContent\" className='container-fluid'>\r\n                <PostsComponent />\r\n            </div>\r\n            <nav id=\"mainNav\">Nav</nav>\r\n            <div id=\"sidebar\">Sidebar</div>\r\n            <footer id=\"pageFooter\">Footer</footer>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useEffect, useState} from \"react\";\r\nimport {apiPostFeed} from \"./posts_api_methods\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst PostsList = (props) => {\r\n    const [postsInit, setPostsInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [nextUrl, setNestUrl] = useState(null)\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newPosts].concat(postsInit)\r\n        if (final.length !== posts.length) {\r\n            setPosts(final)\r\n        }\r\n    }, [props.newPosts, posts, postsInit])\r\n\r\n    useEffect(() => {\r\n        if (postsDidSet === false) {\r\n            const handlePostListLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNestUrl(response.next)\r\n                    setPostsInit(response.results)\r\n                    setPostsDidSet(true)\r\n                }\r\n            }\r\n            apiPostFeed(handlePostListLookup)\r\n        }\r\n    }, [postsInit, postsDidSet, setPostsDidSet, props.username])\r\n\r\n    const handleDidRepost = (newPost) => {\r\n        const updatePostsInit = [...postsInit]\r\n        updatePostsInit.unshift(newPost)\r\n        setPostsInit(updatePostsInit)\r\n        const updateFinalPosts = [...posts]\r\n        updateFinalPosts.unshift(posts)\r\n        setPosts(updateFinalPosts)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    setNestUrl(response.next)\r\n                    const newPosts = [...posts].concat(response.results)\r\n                    setPostsInit(newPosts)\r\n                    setPosts(newPosts)\r\n                } else {\r\n                    alert('alert')\r\n                }\r\n            }\r\n            apiPostFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {posts.map((item, index)=>{\r\n                return <Post\r\n                    post={item}\r\n                    didRepost={handleDidRepost}\r\n                    className='my-5 py-5 border bg-white text-dark'\r\n                    key={`${index}-{item.id}`}\r\n                />\r\n            })}\r\n            {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>next</button>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PostsList","import React, {useState} from \"react\";\r\nimport FeedList from \"./FeedList\";\r\nimport PostCreate from \"./Post/PostCreate\";\r\nimport styles from \"./Posts.module.css\";\r\n\r\n\r\nconst FeedComponent = (props) => {\r\n    const [newPosts, setNewPosts] = useState([])\r\n    const canPost = props.canPost === 'false' ? false : true\r\n\r\n    const handleNewPost = (newPost) => {\r\n        let tempNewPosts = [...newPosts]\r\n        tempNewPosts.unshift(newPost)\r\n        setNewPosts(tempNewPosts)\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        {canPost === true && <PostCreate didPost={handleNewPost} className={\"col-12 my-5 \" + styles.postCreate} />}\r\n        <FeedList newPosts={newPosts} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default FeedComponent","import numeral from \"numeral\";\r\nimport React from \"react\";\r\n\r\nexport const DisplayCount = (props) => {\r\n    return <span>{numeral(props.children).format('0a')}</span>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiProfileDetail, apiProfileFollowToggle} from \"./profile_api_methods\";\r\nimport {UserPicture} from \"./UserActions\";\r\nimport {DisplayCount} from \"../../utils\";\r\n\r\n\r\nconst ProfileBagde = (props) => {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? 'Unfollow' : 'Follow'\r\n\r\n    currentVerb = profileLoading ? 'Loading...' : currentVerb\r\n\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p>{user.first_name} {user.last_name}</p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? 'follower' : 'followers'}</p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        {user.bio ? <p>Bio: {user.bio}</p> : null}\r\n        {user.location ? <p>Location: {user.location}</p> : null}\r\n        <button onClick={handleFollowToggle} className='btn btn-primary'>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport const ProfileBagdeComponent = (props) => {\r\n    const {username} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200) {\r\n            setProfile(response)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiProfileDetail(username, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n            if (status === 200) {\r\n                setProfile(response)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n    }\r\n\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBagde user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} />: null\r\n}\r\n","import {backendLoockup} from \"../../api/posts_api\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLoockup('GET', `/profiles/${username}/`, callback)\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {'action': `${action && action}`.toLowerCase()}\r\n    backendLoockup('POST', `/profiles/${username}/follow`, callback, data)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport PostsComponent from \"./components/Posts/PostsComponent\";\r\nimport {PostDetailComponent} from \"./components/Posts/Post/Post\";\r\nimport FeedComponent from \"./components/Posts/FeedComponent\";\r\nimport {ProfileBagdeComponent} from \"./components/Profiles/ProfileBadge\";\r\n\r\nconst e = React.createElement\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nconst appEl = document.getElementById('root')\r\nif (appEl) {\r\n    const DatasetComponent = e(App, appEl.dataset)\r\n    ReactDOM.render(DatasetComponent, appEl)\r\n}\r\nconst postsEl = document.getElementById('posts-element')\r\nif (postsEl) {\r\n    const DatasetComponent = e(PostsComponent, postsEl.dataset)\r\n    ReactDOM.render(DatasetComponent, postsEl)\r\n}\r\n\r\nconst userProfileBagdeEl = document.querySelectorAll('.profile-badge-element')\r\nuserProfileBagdeEl.forEach(container=>{\r\n    ReactDOM.render(e(ProfileBagdeComponent, container.dataset), container)\r\n})\r\n\r\n\r\nconst feedEl = document.getElementById('feed-element')\r\nif (feedEl) {\r\n    const DatasetComponent = e(FeedComponent, feedEl.dataset)\r\n    ReactDOM.render(DatasetComponent, feedEl)\r\n}\r\n\r\nconst postDetailElements = document.querySelectorAll('.post-detail-element')\r\npostDetailElements.forEach(container=>{\r\n    ReactDOM.render(e(PostDetailComponent, container.dataset), container)\r\n})\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}